version: '2'

volumes:
  zookeeper0:
  zookeeper1:
  zookeeper2:
  kafka0:
  kafka1:
  kafka2:
  kafka3:
  orderer0.example.com:
  orderer1.example.com:
  orderer2.example.com:
  peer0.government.example.com:
  peer0.veterinarians.example.com:
  peer0.dairy.example.com:
  # peer1.dairy.example.com:
  # peer2.dairy.example.com:
  # peer3.dairy.example.com:
  # peer4.dairy.example.com:
  # peer5.dairy.example.com:
  government_couchdb0:

networks:
  byfn:

services:

  government_couchdb0:
    container_name: government_couchdb0
    image: hyperledger/fabric-couchdb

    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - byfn

  zookeeper0:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  zookeeper1:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  zookeeper2:
    extends:
      file: zooka-base.yaml
      service: zookeeper
    container_name: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  kafka0:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka0
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  kafka1:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  kafka2:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka2
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  kafka3:
    extends:
      file: zooka-base.yaml
      service: kafka
    container_name: kafka3
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_MESSAGE_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_MAX_BYTES=2147483647
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=2147483647
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

  orderer0.example.com:
    extends:
      file: ./orderer-base.yaml
      service: orderer
    container_name: orderer0.example.com
    environment:
      - ORDERER_HOST=orderer0.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

    ports:
      - 7050:7050

  orderer1.example.com:
    extends:
      file:   ./orderer-base.yaml
      service: orderer
    container_name: orderer1.example.com
    environment:
      - ORDERER_HOST=orderer1.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

    ports:
      - 8050:8050

  orderer2.example.com:
    extends:
      file:   ./orderer-base.yaml
      service: orderer
    container_name: orderer2.example.com
    environment:
      - ORDERER_HOST=orderer2.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=30s
      - ORDERER_KAFKA_RETRY_LONGTOTAL=5m
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
    volumes:
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
      - ../crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
      - ../network-config/:/var/hyperledger/configs
    networks:
      byfn:
        aliases:
          - ${CORE_PEER_NETWORKID}

    ports:
      - 9050:9050

  dairyca.example.com:
        image: hyperledger/fabric-ca
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=dairyCA
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.dairy.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/192b33e4570e8500aa710093721a28e27e3f590900302db77ce9e9a131883c3d_sk
        ports:
            - "7056:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        volumes:
            - ../crypto-config/peerOrganizations/dairy.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: DairyCA
        networks:
          byfn:
             aliases:
               - ${CORE_PEER_NETWORKID}

  governmentca.example.com:
        image: hyperledger/fabric-ca
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=governmentCA
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.government.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/43eff0a6add5fd04741c841a6d49eea98e510c9576a5dce3280dda2f4f7f97c1_sk
        ports:
            - "7054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        volumes:
            - ../crypto-config/peerOrganizations/government.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: GovernmentCA
        networks:
          byfn:
             aliases:
               - ${CORE_PEER_NETWORKID}

  veterinariansca.example.com:
        image: hyperledger/fabric-ca
        environment:
            - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
            - FABRIC_CA_SERVER_CA_NAME=veterinariansCA
            - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.veterinarians.example.com-cert.pem
            - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/3ce360bf8aa43f2402968577b7157fde01a4b780035c4f799d59a705c5c304df_sk
        ports:
            - "7055:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw'
        volumes:
            - ../crypto-config/peerOrganizations/veterinarians.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        container_name: VeterinariansCA
        networks:
          byfn:
             aliases:
               - ${CORE_PEER_NETWORKID}


  peer0.government.example.com:
    container_name: peer0.government.example.com
    extends:
      file:  ./docker-compose-base.yaml
      service: peer0.government.example.com
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - government_couchdb0
    networks:
      - byfn

  peer0.veterinarians.example.com:
    container_name: peer0.veterinarians.example.com
    extends:
      file:  ./docker-compose-base.yaml
      service: peer0.veterinarians.example.com
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
    networks:
      - byfn

  peer0.dairy.example.com:
    container_name: peer0.dairy.example.com
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
    extends:
      file:  ./docker-compose-base.yaml
      service: peer0.dairy.example.com
    networks:
      - byfn

  # peer1.dairy.example.com:
  #   container_name: peer1.dairy.example.com
  #   extends:
  #     file:  ./docker-compose-base.yaml
  #     service: peer1.dairy.example.com
  #   depends_on:
  #     - orderer0.example.com
  #     - orderer1.example.com
  #     - orderer2.example.com
  #   networks:
  #     - byfn

  # peer2.dairy.example.com:
  #   container_name: peer2.dairy.example.com
  #   depends_on:
  #     - orderer0.example.com
  #     - orderer1.example.com
  #     - orderer2.example.com
  #   extends:
  #     file:  ./docker-compose-base.yaml
  #     service: peer2.dairy.example.com
  #   networks:
  #     - byfn

  # peer3.dairy.example.com:
  #   container_name: peer3.dairy.example.com
  #   depends_on:
  #     - orderer0.example.com
  #     - orderer1.example.com
  #     - orderer2.example.com
  #   extends:
  #     file:  ./docker-compose-base.yaml
  #     service: peer3.dairy.example.com
  #   networks:
  #     - byfn

  # peer4.dairy.example.com:
  #   container_name: peer4.dairy.example.com
  #   depends_on:
  #     - orderer0.example.com
  #     - orderer1.example.com
  #     - orderer2.example.com
  #   extends:
  #     file:  ./docker-compose-base.yaml
  #     service: peer4.dairy.example.com
  #   networks:
  #     - byfn

  # peer5.dairy.example.com:
  #   container_name: peer5.dairy.example.com
  #   depends_on:
  #     - orderer0.example.com
  #     - orderer1.example.com
  #     - orderer2.example.com
  #   extends:
  #     file:  ./docker-compose-base.yaml
  #     service: peer5.dairy.example.com
  #   networks:
  #     - byfn